package main

import (
	"cube/worker"
	"cube/task"
	"fmt"
	"time"

	"github.com/golang-collections/collections/queue"
	"github.com/google/uuid"
)

func main() {
	db := make(map[uuid.UUID]*task.Task)
	w := worker.Worker{
		Queue: *queue.New(),
		Db: db,
	}

	t := task.Task{
		ID: uuid.New(),
		Name: "Task-1",
		State: task.Scheduled,
		Image: "strm/helloworld-http",
	}

	fmt.Println("Starting Task")
	w.AddTask(t)
	result := w.RunTask()
	if result.Error != nil {
		panic(result.Error)
	}

	t.ContainerID = result.ContainerID
	fmt.Printf("Task %s started\n", t.ID)
	fmt.Printf("Task is running in Container %s %s\n", t.ID, t.ContainerID)
    fmt.Println("Sleey time")
	time.Sleep(10 * time.Second)

	fmt.Printf("Stopping Task")
	t.State = task.Completed
	w.AddTask(t)
	result = w.RunTask()
	if result.Error != nil {
		panic(result.Error)
		
	}

	fmt.Printf("Task %s completed\n", t.ID)
}
